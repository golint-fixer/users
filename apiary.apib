FORMAT: 1A
HOST: http://api.quorums.co/

# Quorums
> **NOTE**: This document is a **work in progress**.

Contacts is a simple API allowing consumers to view and save contacts.

## Rules
### JSON
The JSON formatting rules are inspired by
[JSend](http://labs.omniti.com/labs/jsend). The most notable modification
is that the response in case of failure must include a wrapped object if
the failure is related to a validation error on one of its attribute.

Moreover, no response must be returned for the following status codes
with a *no body* annotation.

And finally, we also specify a format for the request, similar to the
response formatting.

## Errors
### Success
Success status code are:

- 200 OK
- 201 Created
- 204 No Content - **no body**
- 304 Redirection - **no body**

# 

+ Model (application/json)

        {
            "status": "success",
            "data": {
                ...
            }
        }
        
+ Exemple

        {
            "status": "success",
            "data": {
                "contact" {
                    "id": 42,
                    "firstname": "Jean",
                    "surname": "KÃ©vin"
                }
            }
        }


### Failure
Failure status code are:

- 400 Bad Request
- 401 Unauthorized
- 403 Forbidden
- 404 Not Found

# 

+ Model (application/json)

        {
            "status": "fail",
            "data": {
                ...
            }
        }
        
+ Exemple

        {
            "status": "fail",
            "data": {
                "contact": {
                    "mail": "is not valid"
                }
            }
        }

### Error
Error "status" code are:

- 500 Internal Server Error

Other specific 5xx "status" could be used (e.g. 503 Service Unavailable).

+ Model (application/json)

        {
            "status": "error",
            "message": "error description"
        }

## Contact Collection [/contacts]

+ Model (application/json)

        [
            {
                "id": 0,
                "firstname": "Jean",
                "surname": "Dupont"
            }, {
                "id": 1,
                "firstname": "Jean",
                "surname": "Dupond"
            }
        ]

### Create [POST]

+ Request (application/json)

    Contact creation.

    + Body

            {
                "data": {
                    "contact": {
                        "firstname": "Jeannot",
                        "surname": "Deleau"
                    }
                }
            }

+ Response 201 (application/json)

    When created successfully.

    + Headers

            Location: /contacts/3

    + Body

            {
                "status": "success",
                "data": {
                    "contact": {
                        "id": 1,
                        "firstname": "Jeannot",
                        "surname": "Dupont"
                    }
                }
            }

+ Request (application/json)

    With missing `surname` required attribute.

    + Body

            {
                "data": {
                    "contact": {
                        "firstname": "Jeannot"
                    }
                }
            }

+ Response 400 (application/json)

    In case of bad request.

    + Body

            {
                "status": "fail",
                "data": {
                    "contact": {
                        "surname": "is required"
                    }
                }
            }
            
### Retrieve [GET]

+ Response 200 (application/json)

    When contacts are found.

    + Body

            {
                "status": "success",
                "data": {
                    "contacts": [
                        {
                            "id": 1,
                            "firstname": "Jeannot",
                            "surname": "Dupont"
                        }
                    ]
                }
            }
            
+ Response 204

# Group Contact
This section regroups the contact service APIs.

A Contact object has the following attributes:

+ firstname (string) - **required**
+ surname (string) - **required**

## Contact [/contacts/{contact_id}]

+ Model (application/json)

        {
            "firstname": "Jeannot",
            "surname": "Deleau"
        }

+ Parameters
    + contact_id: `1` (integer) - ID of the Contact

### Retrieve [GET]

+ Response 200 (application/json)

    When the contact is found.

    + Body

            {
                "status": "success",
                "data": {
                    "contact": {
                        "id": 1,
                        "firstname": "Jeannot",
                        "surname": "Dupont"
                    }
                }
            }

+ Response 204
            
### Update [PATCH]

+ Request (application/json)

    To update the `firstname` attribute.
    
    + Body

            {
                "data": {
                    "contact": {
                        "firstname": "Jeannette"
                    }
                }
            }

+ Response 200 (application/json)

    With the updated contact.

    + Body

            {
                "status": "success",
                "data": {
                    "contact": {
                        "id": 1,
                        "firstname": "Jeannette",
                        "surname": "Dupont"
                    }
                }
            }

+ Request (application/json)

    To update the `mail` attribute.
    
    + Body

            {
                "data": {
                    "contact": {
                        "mail": "Jeannette"
                    }
                }
            }

+ Response 400 (application/json)

    In case of bad request.

    + Body

            {
                "status": "fail",
                "data": {
                    "contact": {
                        "mail": "is not valid"
                    }
                }
            }
            
### Delete [DELETE]

+ Response 204

    If deleted successfully.
    
    + Body

+ Response 400 (application/json)

    If no matching contact is found.
    
    + Body

            {
                "status": "fail",
                "data": {
                    "contact": {
                        "id": "no contact found"
                    }
                }
            }
